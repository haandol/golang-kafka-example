version: '3.4'

services:
  zookeeper:
    image: zookeeper
    restart: always
    profiles: ['backend']
    ports:
      - '2181:2181'
  kafka:
    depends_on:
      - zookeeper
    image: bitnami/kafka:2.8.1
    restart: always
    profiles: ['backend']
    ports:
      - '9093:9093'
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka-ui:
    depends_on:
      - kafka
    image: provectuslabs/kafka-ui
    restart: always
    profiles: ['backend']
    ports:
      - '8080:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
  producer:
    image: golang:1.20
    profiles: ['dev']
    working_dir: /src
    command: ["go", "run", "cmd/pub/main.go"]
    volumes:
      - .:/src
  consumer:
    image: golang:1.20
    profiles: ['dev']
    working_dir: /src
    command: ["go", "run", "cmd/sub/main.go"]
    environment:
      - KAFKA_BATCH_SIZE=1
      - CONSUMER_GROUP_ID=group1
    volumes:
      - .:/src
